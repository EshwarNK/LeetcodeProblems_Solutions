/**
Merge two sorted linked lists and return it as a new sorted list. The new list should be made by splicing together the nodes of the first two lists.
Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4
*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(-1);
        ListNode head = dummy;
        while(l1!=null && l2!=null){
            int newNode = 0;
            if(l1.val<l2.val){
                newNode = l1.val;
                l1 = l1.next;
            }else{
                newNode = l2.val;
                l2 = l2.next;
            }
            head.next = new ListNode(newNode);
            head = head.next;
        }
        while(l1!=null){
            head.next = new ListNode(l1.val);
            head = head.next;
            l1=l1.next;
        }
        while(l2!=null){
            head.next = new ListNode(l2.val);
            head = head.next;
            l2=l2.next;
        }
        return dummy.next;
    }
}
